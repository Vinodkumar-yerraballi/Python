# -*- coding: utf-8 -*-
"""Pdf_to_json.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11IUNEdvco-_Mlqwt69UAbhfypfTvgrdX
"""

!pip install PyPDF2

!pip install tabula_py

!pip install docx2txt

!pip install python-docx

import PyPDF2
import tabula
from tabula.io import read_pdf
import json
import os
import docx2txt
import docx

def convert_to_data(file_path):
  if file_path =='.pdf':
     tables = tabula.read_pdf(file_path)
     #create empty list
     information=[]
     for table in tables:
         values_dict={}
         for i, row in table.iterrows():
             row_data=[]
             for cell in row:
                  row_data.append(cell)
                  values_dict[i]=row_data
                  information.append(values_dict)
                  table_json = json.dumps(information)
                  print(table_json)

  elif file_path=='.docx':
    content = docx.Document(file_path)
    if len(content)==0:
      return None
      # Create an empty list to store the table data
    table_data = []

    # Iterate over all tables in the document
    for table in content.tables:
          # Create an empty dictionary to store the table information
          table_dict = {}

         # Iterate over all rows in the table
          for i, row in enumerate(table.rows):
            # Create an empty list to store the row data
                row_data = []

        # Iterate over all cells in the row
                for cell in row.cells:
                    # Append the text in the cell to the row data list
                   row_data.append(cell.text)

        # Add the row data to the table dictionary
                table_dict[f"Row {i+1}"] = row_data

    # Add the table dictionary to the table data list
          table_data.append(table_dict)
          with open(f'{file_path}.json', 'w') as f:
                    json.dump(table_dict, f) 
    return



import json
import tabula
import os
def pdf_to_doc_coverter(file_path):
  # Loop through all the files in the directory
  for filename in os.listdir(file_path):
    # Check if the file ends with ".pdf"
    if filename==".pdf":
        # Open the PDF file in read binary mode
        with open(os.path.join(file_path, filename), 'rb') as pdf_file:
      # Load the PDF file and extract the table data
          tables = tabula.read_pdf(pdf_file)
      # Create an empty list to store the table data
          table_data = []

      # Iterate over all tables in the document
          for table in tables:
          # print(table)
          # Create an empty dictionary to store the table information
               table_dict = {}

          # Iterate over all rows in the table
               for i, row in table.iterrows():
        # Create an empty list to store the row data
                      row_data = []

        # Iterate over all cells in the row
                      for cell in row:
            # Append the text in the cell to the row data list
                       row_data.append(cell)

        # Add the row data to the table dictionary
                       table_dict[i] = row_data

    # Add the table dictionary to the table data list
                       table_data.append(table_dict)

# Convert the table data list to JSON format
                       table_json = json.dumps(table_data)

# Print the JSON data
                       print(table_json)

table=pdf_to_doc_coverter('/content/My Resume .pdf')
print(table)

input_folder = 'C:/Users/Admin/Downloads/intern/input/'
output_folder = 'C:/Users/Admin/Downloads/intern/output'
def pdf_to_doc_coverter1(file_path):
  if file_path=='.pdf':
        # check if the file exists
        if os.path.exists(file_path):
    # open the file
         with open(file_path, "rb") as pdf_file:
            pdf_reader = PyPDF2.PdfReader(pdf_file)
            if pdf_reader.pages==0:
              return None
            # Load the PDF file and extract the table data
            tables = tabula.read_pdf('/content/My Resume .pdf')

# Create an empty list to store the table data
            table_data = []

# Iterate over all tables in the document
            for table in tables:
    # print(table)
    # Create an empty dictionary to store the table information
              table_dict = {}

    # Iterate over all rows in the table
              for i, row in table.iterrows():
        # Create an empty list to store the row data
                row_data = []

        # Iterate over all cells in the row
                for cell in row:
            # Append the text in the cell to the row data list
                   row_data.append(cell)

        # Add the row data to the table dictionary
                   table_dict[i] = row_data

    # Add the table dictionary to the table data list
                   table_data.append(table_dict)

# Convert the table data list to JSON format
            table_json = json.dumps(table_data)

# Print the JSON data
            with open(f'{file_path}.json','w') as f:
              json.dump(table_data,f)
            if table_json not in table_data:
                   text =' '
                   for page in pdf_reader.pages:
                     text +=page.extract_text()
                     output_path = os.path.join(output_folder, file_path + '.txt')
                     with open(output_path, 'w',encoding="utf-8") as output_file:
                                output_file.write(text)
            return 
  elif file_path=='.docx':
            if os.path.exists(file_path):
             # open the file
              with open(file_path, "rb") as pdf_file:
                doc = docx.Document('/content/My Resume .docx')
                if len(doc)==0:
                  return None
                table_data=[]
                for table in doc.tables:
                   # Create an empty dictionary to store the table information
                   table_dict = {}

    # Iterate over all rows in the table
                   for i, row in enumerate(table.rows):
        # Create an empty list to store the row data
                        row_data = []

        # Iterate over all cells in the row
                        for cell in row.cells:
            # Append the text in the cell to the row data list
                          row_data.append(cell.text)

        # Add the row data to the table dictionary
                          table_dict[f"Row {i+1}"] = row_data

    # Add the table dictionary to the table data list
                          table_data.append(table_dict)
                          with open(f'{file_path}.json','w') as file:
                               json.dump(table_data,file)
                          if table_json not in table_data:
                                      text =' '
                                      text = docx2txt.process(file_path)
                                      
                                      output_path = os.path.join(output_folder, file_path + '.txt')
                                      with open(output_path, 'w',encoding="utf-8") as output_file:
                                                output_file.write(text)

                
                return
            
table=pdf_to_doc_coverter1('/content/My Resume .docx')

def pdf_to_doc_coverter2(file_path):
  if file_path=='.pdf':
         with open(file_path, "rb") as pdf_file:
            pdf_reader = PyPDF2.PdfReader(pdf_file)
            if pdf_reader.pages==0:
              return None
            # Load the PDF file and extract the table data
            tables = tabula.read_pdf(pdf_reader)
            table_data = []
            for table in tables:
              table_dict = {}
              for i, row in table.iterrows():
                row_data = []
                for cell in row:
                   row_data.append(cell)
                   table_dict[i] = row_data
                   table_data.append(table_dict)
              with open(f'{file_path}.json','w') as f:
                      json.dump(table_data,f)
            # if table_dict not in table_data:
            #        text =' '
            #        for page in pdf_reader.pages:
            #          text +=page.extract_text()
            #          output_path = os.path.join(output_folder, file_path + '.txt')
            #          with open(output_path, 'w',encoding="utf-8") as output_file:
            #                     output_file.write(text)
              return
table=pdf_to_doc_coverter2('/content/My Resume .pdf')
print(table)

import os
import PyPDF2
import tabula
import json

def read_pdf_file(filepath):
    if not filepath.endswith(".pdf"):
        print(f"{filepath} is not a PDF file.")
        return []
    with open(filepath, 'rb') as pdf_file:
        pdf_reader = PyPDF2.PdfReader(pdf_file)
        if pdf_reader.pages == 0:
            print(f"{filepath} does not contain any tables.")
            return []
        tables = tabula.read_pdf(filepath)
        json_tables = []
        for table in tables:
            json_table = []
            for index, row in table.iterrows():
                row_dict = {}
                for column_name, cell_value in row.iteritems():
                    row_dict[column_name] = cell_value
                json_table.append(row_dict)
                with open(f'{filepath}.json','w') as file:
                       json.dump(json_table,file)
                if pdf_reader not in json_table:
                            text =' '
                            for page in pdf_reader.pages:
                                 text = page.extract_text()
                                 with open(f'{filepath}.txt','w') as file:
                                   file.write(text)
        
        return 
    if not filepath.endswith(".docx"):
              print(f"{filepath} is not a doc file.")
              return []
              with open(filepath, 'rb') as doc_file:
                doc = docx.Document(filepath)
                table_data = []
                for table in doc.tables:
                  table_dict = {}
                  for i, row in enumerate(table.rows):
                    row_data = []
                    for cell in row.cells:
                      row_data.append(cell.text)
                      table_dict[i] = row_data
                      table_data.append(table_dict)
                      with open(f'{filepath}.json','w') as file:
                        json.dump(table_data,file)
                        if doc not in table_data:
                          text=' '
                          for para in doc.paragraphs:
                             text += para.text
                             with open(f'{filepath}.txt','w') as file:
                               file.write(text)
    return






table=read_pdf_file('/content/My Resume .pdf')
table

def read_doc_file(filepath):
  if not filepath.endswith(".docx"):
      print(f"{filepath} is not a doc file.")
      return []
      with open(filepath, 'rb') as doc_file:
            doc = docx.Document(filepath)
            table_data = []
            for table in doc.tables:
              table_dict = {}
              for i, row in enumerate(table.rows):
                  row_data = []
                  for cell in row.cells:
                    row_data.append(cell.text)
                    table_dict[i] = row_data
                    table_data.append(table_dict)
                    with open(f'{filepath}.json','w') as file:
                      json.dump(table_data,file)
                      if doc not in table_data:
                        text=' '
                        for para in doc.paragraphs:
                            text += para.text
                            with open(f'{filepath}.txt','w') as file:
                              file.write(text)
  return



table2=read_doc_file('/content/My Resume .docx')
table2

def docx_to_json(file_path):
  if filepath.endswith('.docx'):
    print(f"{filepath} is not a docx file.")
        return []
    with open(filepath, 'rb') as doc_file:
      doc = docx.Document(doc_file)
      table_data = []
      for table in doc.tables:
        table_dict = {}
        for i, row in enumerate(table.rows):
          row_data = []
          for cell in row.cells:
            table_dict[i] = row_data
            table_data.append(table_dict)
            with open(f'{file_path}.json','w') as file:
                       json.dump(json_table,file)
            if doc not in json_table:
                            text =' '
                            text=docx2txt.process(file_path)
                                 with open(f'{file_path}.txt','w') as file:
                                   file.write(text)
      return